@*@model IEnumerable<SS.Domain.Core.Identity.Models.UserDto>*@
@{
    ViewBag.Title = "Organizations";
}
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header  row clearfix"></div>
                    
                    <table id="tableOrganizations" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Organization Id</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Website</th>
                                <th>Address</th>
                                <th style="width: 5%">Action</th>
                            </tr>
                        </thead>
                    </table>

                </div>
            </div>
        </div>
    </div>
    
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.18/js/jquery.dataTables.min.js" defer ></script>
<script>$(document).ready(function () {
       var r = $('#tableOrganizations').DataTable({
            "paging": true,
            "processing": true,
            "serverSide": true,
            "searching": true,
            "lengthChange": true,
            "responsive": true,
            "columnDefs": [{ targets: 'no-sort', orderable: true }],
            "ordering": true,
            "autoWidth": false,
            "ajax": {
                "url": '/Organizations/GetPaginatedTable',
                "type": "POST",
                "data": function (data) {
                    var additionalValues = [];
                    additionalValues[0] = null;
                    data.additionalValues = additionalValues;
                    return data;
                }
            },
            "columns": [
                { data: "organizationId" },
                { data: "name" },
                { data: "email" },
                { data: "phone" },
                { data: "website" },
                { data: "address1" },
                {
                    data: "id",
                    render: function (data, type, row) {
                        return "<div class='btn-group btn-group-sm'>"
                            + "<a onclick='onEditingAnimal(" + JSON.stringify(row) + ")' class='btn btn-info'><i class='fas fa-pen'></i></a>"
                            + "<a onclick='onDeletingAnimal(" + JSON.stringify(row) + ")' class='btn btn-danger'><i class='fas fa-trash'></i></a>"
                            + "</div>";
                    }
                }
            ]
        });
    });

    </script>









@*
@using TamagotchiWeb.Entities
@using System.Text.Json
@model TamagotchiWeb.Models.GetOrganizations
@{
    ViewData["Title"] = "Index";
}

<h1>Organizations</h1>

<button id="synchronize" class="btn btn-success float-right col-3" onclick="onSynch()"> Synch </button>

<label>@Model?.Pagination?.total_count</label>
@if(Model != null && Model.Pagination?.total_count > 0 && Model.Organizations != null && Model.Organizations.Any())
{
    <table id="tableRole" class="table table-bordered table-striped">
    <thead>
    <tr> 
        <th>Organization Id</th>
        <th>Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Website</th>
        <th>Address</th>
        <th style="width: 5%">Action</th>
    </tr>
    </thead>
    <tbody>
    @for (var i = 0; i < 100; i++)
    {
        var animal = Model.Organizations.ElementAt(i);
        <tr>
            <td>@animal.organizationId</td>
            <td>@animal.name</td>
            <td>@animal.email</td>
            <td>@animal.phone</td>
            <td>@animal.website</td>
            <td>@animal.address1 @animal.city @animal.country @animal.postcode</td>
            <td style="text-align:center;">
                <div class="btn-group btn-group-sm ">
                    <a onclick="onEditingRole(@JsonSerializer.Serialize(animal))" class="btn btn-info">
                        <i class="fas fa-pen"></i>
                    </a>
                    <a onclick="onDeletingRole(@JsonSerializer.Serialize(animal))" class="btn btn-danger">
                        <i class="fas fa-trash"></i>
                    </a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>

}

<script>
    function onSynch() {
        $.ajaxSetup({ cache: true });
        $.ajax({
            async: true,
            type: "Post",
            url: '/Organizations/Synch'
        });
       // util.makeRequest(null, '/Animals/Synch');
    }
    </script>*@
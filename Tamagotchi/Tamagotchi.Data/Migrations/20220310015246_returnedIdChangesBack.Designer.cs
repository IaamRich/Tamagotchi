// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Tamagotchi.Data;

#nullable disable

namespace Tamagotchi.Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220310015246_returnedIdChangesBack")]
    partial class returnedIdChangesBack
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TamagotchiWeb.Entities.Animal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("animalId")
                        .HasColumnType("int");

                    b.Property<bool?>("catsEnvinronment")
                        .HasColumnType("bit");

                    b.Property<bool?>("childrenEnvinronment")
                        .HasColumnType("bit");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("declawed")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("dogsEnvinronment")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("houseTrained")
                        .HasColumnType("bit");

                    b.Property<bool?>("isMixedBreed")
                        .HasColumnType("bit");

                    b.Property<bool?>("isUnknownBreed")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizationAnimalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryBreed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("primaryPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("published_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("secondaryBreed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("secondaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("shotsCurrent")
                        .HasColumnType("bit");

                    b.Property<string>("size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("spayedNeutered")
                        .HasColumnType("bit");

                    b.Property<bool?>("specialNeeds")
                        .HasColumnType("bit");

                    b.Property<string>("species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("status_changed_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tertiaryColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
